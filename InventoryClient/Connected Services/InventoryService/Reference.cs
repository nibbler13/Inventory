//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryClient.InventoryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDataType", Namespace="http://schemas.datacontract.org/2004/07/InventoryService")]
    [System.SerializableAttribute()]
    public partial class EventDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MisProcessPidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryClient.InventoryService.EventDataType.Service[] ServicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDateField, value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorName {
            get {
                return this.DoctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNameField, value) != true)) {
                    this.DoctorNameField = value;
                    this.RaisePropertyChanged("DoctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MisProcessPid {
            get {
                return this.MisProcessPidField;
            }
            set {
                if ((object.ReferenceEquals(this.MisProcessPidField, value) != true)) {
                    this.MisProcessPidField = value;
                    this.RaisePropertyChanged("MisProcessPid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryClient.InventoryService.EventDataType.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="EventDataType.Service", Namespace="http://schemas.datacontract.org/2004/07/InventoryService")]
        [System.SerializableAttribute()]
        public partial class Service : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private double CountField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private InventoryClient.InventoryService.EventDataType.Service.Material[] MaterialsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public double Count {
                get {
                    return this.CountField;
                }
                set {
                    if ((this.CountField.Equals(value) != true)) {
                        this.CountField = value;
                        this.RaisePropertyChanged("Count");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((object.ReferenceEquals(this.IdField, value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public InventoryClient.InventoryService.EventDataType.Service.Material[] Materials {
                get {
                    return this.MaterialsField;
                }
                set {
                    if ((object.ReferenceEquals(this.MaterialsField, value) != true)) {
                        this.MaterialsField = value;
                        this.RaisePropertyChanged("Materials");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="EventDataType.Service.Material", Namespace="http://schemas.datacontract.org/2004/07/InventoryService")]
            [System.SerializableAttribute()]
            public partial class Material : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private double CountField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string Id1CField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string IdMisField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string NameField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string UnitField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public double Count {
                    get {
                        return this.CountField;
                    }
                    set {
                        if ((this.CountField.Equals(value) != true)) {
                            this.CountField = value;
                            this.RaisePropertyChanged("Count");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Id1C {
                    get {
                        return this.Id1CField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.Id1CField, value) != true)) {
                            this.Id1CField = value;
                            this.RaisePropertyChanged("Id1C");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string IdMis {
                    get {
                        return this.IdMisField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.IdMisField, value) != true)) {
                            this.IdMisField = value;
                            this.RaisePropertyChanged("IdMis");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Name {
                    get {
                        return this.NameField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.NameField, value) != true)) {
                            this.NameField = value;
                            this.RaisePropertyChanged("Name");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Unit {
                    get {
                        return this.UnitField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                            this.UnitField = value;
                            this.RaisePropertyChanged("Unit");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryService.IWcfService", CallbackContract=typeof(InventoryClient.InventoryService.IWcfServiceCallback))]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/RegisterClient")]
        void RegisterClient(string userIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/RegisterClient")]
        System.Threading.Tasks.Task RegisterClientAsync(string userIdentifier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfService/NotificateClient")]
        void NotificateClient(InventoryClient.InventoryService.EventDataType eventData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : InventoryClient.InventoryService.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.DuplexClientBase<InventoryClient.InventoryService.IWcfService>, InventoryClient.InventoryService.IWcfService {
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(string userIdentifier) {
            base.Channel.RegisterClient(userIdentifier);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string userIdentifier) {
            return base.Channel.RegisterClientAsync(userIdentifier);
        }
    }
}
